<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.stip.net.dao.DictionaryDao">
  <resultMap id="BaseResultMap" type="com.stip.net.entity.Dictionary">
    <id column="dictionary_dic_id" jdbcType="VARCHAR" property="dicId" />
    <result column="dictionary_dic_key" jdbcType="VARCHAR" property="dicKey" />
    <result column="dictionary_dic_value" jdbcType="VARCHAR" property="dicValue" />
    <result column="dictionary_dic_type" jdbcType="VARCHAR" property="dicType" />
    <result column="dictionary_remark" jdbcType="VARCHAR" property="remark" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    dictionary.dic_id as dictionary_dic_id, dictionary.dic_key as dictionary_dic_key, 
    dictionary.dic_value as dictionary_dic_value, dictionary.dic_type as dictionary_dic_type, 
    dictionary.remark as dictionary_remark
  </sql>
  <select id="selectByExample" parameterType="com.stip.net.example.DictionaryExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from dictionary dictionary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="fromRowNum != null and toRowNum >= 0">
      limit #{fromRowNum}, #{toRowNum}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from dictionary dictionary
    where dictionary.dic_id = #{dicId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from dictionary
    where dic_id = #{dicId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.stip.net.example.DictionaryExample">
    delete dictionary from dictionary dictionary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.stip.net.entity.Dictionary">
    insert into dictionary (dic_id, dic_key, dic_value, 
      dic_type, remark)
    values (#{dicId,jdbcType=VARCHAR}, #{dicKey,jdbcType=VARCHAR}, #{dicValue,jdbcType=VARCHAR}, 
      #{dicType,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.stip.net.entity.Dictionary">
    insert into dictionary
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="dicId != null">
        dic_id,
      </if>
      <if test="dicKey != null">
        dic_key,
      </if>
      <if test="dicValue != null">
        dic_value,
      </if>
      <if test="dicType != null">
        dic_type,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="dicId != null">
        #{dicId,jdbcType=VARCHAR},
      </if>
      <if test="dicKey != null">
        #{dicKey,jdbcType=VARCHAR},
      </if>
      <if test="dicValue != null">
        #{dicValue,jdbcType=VARCHAR},
      </if>
      <if test="dicType != null">
        #{dicType,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.stip.net.example.DictionaryExample" resultType="java.lang.Integer">
    select count(*) from dictionary dictionary
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update dictionary dictionary
    <set>
      <if test="record.dicId != null">
        dictionary.dic_id = #{record.dicId,jdbcType=VARCHAR},
      </if>
      <if test="record.dicKey != null">
        dictionary.dic_key = #{record.dicKey,jdbcType=VARCHAR},
      </if>
      <if test="record.dicValue != null">
        dictionary.dic_value = #{record.dicValue,jdbcType=VARCHAR},
      </if>
      <if test="record.dicType != null">
        dictionary.dic_type = #{record.dicType,jdbcType=VARCHAR},
      </if>
      <if test="record.remark != null">
        dictionary.remark = #{record.remark,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update dictionary dictionary
    set dictionary.dic_id = #{record.dicId,jdbcType=VARCHAR},
      dictionary.dic_key = #{record.dicKey,jdbcType=VARCHAR},
      dictionary.dic_value = #{record.dicValue,jdbcType=VARCHAR},
      dictionary.dic_type = #{record.dicType,jdbcType=VARCHAR},
      dictionary.remark = #{record.remark,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.stip.net.entity.Dictionary">
    update dictionary
    <set>
      <if test="dicKey != null">
        dic_key = #{dicKey,jdbcType=VARCHAR},
      </if>
      <if test="dicValue != null">
        dic_value = #{dicValue,jdbcType=VARCHAR},
      </if>
      <if test="dicType != null">
        dic_type = #{dicType,jdbcType=VARCHAR},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=VARCHAR},
      </if>
    </set>
    where dic_id = #{dicId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.stip.net.entity.Dictionary">
    update dictionary
    set dic_key = #{dicKey,jdbcType=VARCHAR},
      dic_value = #{dicValue,jdbcType=VARCHAR},
      dic_type = #{dicType,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR}
    where dic_id = #{dicId,jdbcType=VARCHAR}
  </update>
</mapper>