<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.stip.net.dao.DateListDao">
	<!-- 文件的生成时间： 2017-10-26 16:33:42. 你应该把Mapper类的扩展方法的sql语句放在这个文件里面 -->
	<select id="selectNotEqualOpenId" resultMap="BaseResultMap">
		SELECT
		dateList.date_id AS dateList_date_id,dateList.open_id as
		dateList_open_id
		FROM
		(SELECT
		t.date_id,t.open_id,t1.openid AS oop,
		t1.app_openid AS aoop
		FROM date_list t, muser t1
		WHERE t.open_id =
		t1.openid OR t.open_id = t1.app_openid
		) dateList
		WHERE
		dateList.open_id!=dateList.oop AND dateList.oop != 1
	</select>

	<sql id="Order_Column_List">
		dateList.date_id as dateList_date_id, dateList.date_title
		as dateList_date_title,
		dateList.date_type as dateList_date_type,
		dateList.remind_type as
		dateList_remind_type,
		dateList.repet_remind as
		dateList_repet_remind, dateList.date_time as dateList_date_time,
		dateList.lunar_date as dateList_lunar_date, dateList.lunar_ch as
		dateList_lunar_ch,
		dateList.attention_date as dateList_attention_date,
		dateList.create_time as
		dateList_create_time,
		dateList.user_id as
		dateList_user_id, dateList.open_id as dateList_open_id,
		dateList.is_gc
		as dateList_is_gc,
		if(isnull(dateList.next_remind_time),dateList.date_time,dateList.next_remind_time)
		as dateList_next_remind_time, dateList.date_bg as dateList_date_bg,
		dateList.remark as dateList_remark, dateList.remark1 as
		dateList_remark1, dateList.remark2 as dateList_remark2,
		dateList.remark3 as dateList_remark3, dateList.remarko as
		dateList_remarko, dateList.remarkt as dateList_remarkt,
		dateList.remarkth as dateList_remarkth
	</sql>
	<sql id="B_Column_List">
		b.date_id as date_id,b.date_title as date_title,
		b.date_type as date_type, b.remind_type as remind_type,
		b.repet_remind
		as repet_remind, b.date_time as date_time,
		b.lunar_date as lunar_date,
		b.lunar_ch as lunar_ch,
		b.attention_date as attention_date,
		b.create_time as create_time,
		b.user_id as user_id, b.open_id as
		open_id, b.is_gc as is_gc,
		if(isnull(b.next_remind_time),b.date_time,b.next_remind_time) as
		next_remind_time, b.date_bg as date_bg,
		b.remark as remark, b.remark1
		as remark1, b.remark2 as remark2,
		b.remark3 as remark3, b.remarko as
		remarko, b.remarkt as remarkt,
		b.remarkth as remarkth
	</sql>
	<select id="selectByOrder" parameterType="com.stip.net.entity.DateListExample"
		resultMap="BaseResultMap">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Order_Column_List" />
		from ( select
		<if test="distinct">
			distinct
		</if>
		<include refid="B_Column_List" />
		from date_list b
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		) dateList

		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
		<if test="fromRowNum != null and toRowNum >= 0">
			limit #{fromRowNum}, #{toRowNum}
		</if>
	</select>

	<select id="selectNotEqualUserId" resultMap="BaseResultMap">
		select
		dateList.date_id as dateList_date_id,dateList.open_id as dateList_open_id from
		muser t1,date_list dateList
		where (t1.app_openid=dateList.open_id or
		t1.openid=dateList.open_id)
		and t1.id!=dateList.user_id
	</select>
</mapper>